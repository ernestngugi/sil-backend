name: "CI checks for api"

on: 
  push:
    branches:
      - main
    paths:
      - 'internal/**'
  pull_request:
    paths:
      - 'internal/**'

jobs:
  check-backend-service:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgres://savannah:password@localhost:5432/savannah?sslmode=disable
      ENVIRONMENT: test
      GO111MODULE: on
      GOPROXY: 'https://proxy.golang.org'
      NODE_ENV: test
      PORT: 4000

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: savannah
          POSTGRES_PASSWORD: password
          POSTGRES_DB: savannah
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.19'
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      
      - name: Cache Go modules
        uses: actions/cache@preview
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install goose
        run: cd /tmp && go install github.com/pressly/goose/cmd/goose@latest

      - name: Run postgres migrations
        run: ~/go/bin/goose -dir internal/db/migrations postgres ${DATABASE_URL} up

      - name: Build sil-api
        run: go build -o sil-api cmd/sil-api/main.go

      - name: Run tests
        run: go test -coverprofile=coverage.out ./...
